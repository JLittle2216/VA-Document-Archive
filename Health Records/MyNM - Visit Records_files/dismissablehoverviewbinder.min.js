(function ClassDefinition(){var c="hover",e=null,i="mouseleave",h="mouseenter",d="keyup",a=false,b=true,g=b,f=a,k=function shouldPreventDefault(c){return c.type===d?a:b},m=function handleFocusIn(a,c,d){if(a)return g;if(d)c._clickToDismiss=b;return g},l=function handleMouseEnter(a,d,c){if(d)a._suppressMouseOut=b;if(!c)a._clickToDismiss=b;return g},p=function handleKeyUp(c,b){thisKey=c.key.toUpperCase();if(thisKey==="ESCAPE"||thisKey==="ESC"){b._clickToDismiss=a;return f}return undefined},o=function handleClick(c,e,d){if(e)c._suppressMouseOut=a;if(d&&c._clickToDismiss===b){c._clickToDismiss=a;return f}c._clickToDismiss=b;return g},n=function getNewState(c,k,g,b){var e=WP.DOM.Browser.isMobile&&(WP.DOM.Browser.isIPhone||WP.DOM.Browser.isIPad||WP.DOM.Browser.isIPod),j=WP.DOM.Browser.isMobile;switch(c.type){case"focusin":return m(g,b,e);case"focusout":relTarget=c.relatedTarget;if(k.has(relTarget).length===0){b._clickToDismiss=a;return f}return undefined;case h:return l(b,e,j);case i:if(!b._suppressMouseOut){b._clickToDismiss=a;return f}return undefined;case d:return p(c,b,g);case"click":return o(b,e,j);default:return undefined}};$$WP.Common=$$WP.Common||{};var j=function DismissableHoverViewBinder(c){var b=this;b.WP$Common$ViewBinder(["blur",d,"focus","click",i,h],[c]);b._statePropertyName=c;b._hovered=g;b._unhovered=f;b._clickToDismiss=a;b._suppressMouseOut=a};j.prototype={_statePropertyName:e,_hovered:e,_unhovered:e,_clickToDismiss:e,_suppressMouseOut:e,_onPropertyChanged:function _onPropertyChanged(d,b){var a=this;if(b.to===a._unhovered)a.getBoundElements(d).removeClass(c);else b.to===a._hovered&&a.getBoundElements(d).addClass(c)},_onSyncModelToDOM:function _onSyncModelToDOM(b){var a=this;if(b[a._statePropertyName]===a._hovered)a.getBoundElements(b).addClass(c);else a.getBoundElements(b).removeClass(c)},_onDomEvent:function _onDomEvent(d,e,c){var b,a;b=d[this._statePropertyName];a=n(c,e,b,this);typeof a!=="undefined"&&b!==a&&d.setProperty(this._statePropertyName,a);k(c)&&c.preventDefault()}};$$WP.Common.DismissableHoverViewBinder=j;j.extend($$WP.Common.ViewBinder,"WP$Common$DismissableHoverViewBinder")})();$$WP.Debug.UnitTest=$$WP.Debug.UnitTest||{};$$WP.Debug.UnitTest.tests=$$WP.Debug.UnitTest.tests||[];$$WP.Debug.UnitTest.tests.push(function UnitTests$Common$DismissableHoverViewBinder(){var a;a=$$WP.Debug.UnitTest.assert})